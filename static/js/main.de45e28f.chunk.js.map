{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","this","className","props","event","name","local_date","onClick","description","Component","EventList","events","map","key","id","mockEvents","city","lat","lon","country","zip","member_count","created","duration","rsvp_limit","date_in_series_pattern","status","time","local_time","updated","utc_offset","waitlist_count","yes_rsvp_count","venue","repinned","address_1","localized_country_name","group","join_mode","urlname","who","localized_location","region","timezone","link","visibility","member_pay_fee","query","a","window","location","href","startsWith","name_string","getAccessToken","token","url","axios","get","result","data","getEvents","page","accessToken","localStorage","getItem","code","URLSearchParams","search","getOrRenewAccessToken","lastSavedTime","Date","now","type","tokenInfo","setItem","access_token","refresh_token","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","suggestions","infoText","handleInputChanged","value","target","getSuggestions","then","length","handleItemClicked","updateEvents","onChange","placeholder","item","NumberOfEvents","numberOfEvents","App","defaultCity","response","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.de45e28f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    showDetails: false\r\n  }\r\n\r\n  handleShowDetails = () => {\r\n    if(this.state.showDetails === false) {\r\n      this.setState({ showDetails: true });\r\n    }\r\n    else {\r\n      this.setState({ showDetails: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const showDetails = this.state.showDetails;\r\n\r\n    return(\r\n      <div className=\"event\">\r\n        <div className=\"event__Overview\">\r\n          <p className=\"event__Overview--name\">{this.props.event.name}</p>\r\n          <p className=\"event__Overview--localDate\">{this.props.event.local_date}</p>\r\n          <button className=\"details-btn\" onClick={() => this.handleShowDetails()}>show details</button>\r\n        </div>\r\n        {showDetails &&\r\n          <div className=\"event__Details\">\r\n            <p className=\"event__Details--description\">{this.props.event.description}</p>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {this.props.events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","const mockEvents = {\r\n  city: {\r\n    id: 1007700,\r\n    city: \"MÃ¼nchen\",\r\n    lat: 48.14,\r\n    lon: 11.58,\r\n    state: \"\",\r\n    country: \"de\",\r\n    zip: \"meetup3\",\r\n    member_count: 1257\r\n  },\r\n  events:[\r\n    {\r\n      created: 1563825339000,\r\n      duration: 9000000,\r\n      id: \"263370107\",\r\n      name: \"Microservices mit dem MicroProfile 3.x\",\r\n      rsvp_limit: 80,\r\n      date_in_series_pattern: false,\r\n      status: \"upcoming\",\r\n      time: 1566925200000,\r\n      local_date: \"2019-08-27\",\r\n      local_time: \"19:00\",\r\n      updated: 1563825339000,\r\n      utc_offset: 7200000,\r\n      waitlist_count: 79,\r\n      yes_rsvp_count: 80,\r\n      venue: {\r\n      id: 26266792,\r\n      name: \"adesso AG\",\r\n      lat: 53.54524230957031,\r\n      lon: 9.950983047485352,\r\n      repinned: false,\r\n      address_1: \"GroÃe ElbstraÃe 36\",\r\n      city: \"Hamburg\",\r\n      country: \"de\",\r\n      localized_country_name: \"Deutschland\"\r\n      },\r\n      group: {\r\n      created: 1387402147000,\r\n      name: \"Java User Group Hamburg\",\r\n      id: 11500362,\r\n      join_mode: \"open\",\r\n      lat: 53.54999923706055,\r\n      lon: 10,\r\n      urlname: \"jug-hamburg\",\r\n      who: \"Mitglieder\",\r\n      localized_location: \"Hamburg, Deutschland\",\r\n      state: \"\",\r\n      country: \"de\",\r\n      region: \"de_DE\",\r\n      timezone: \"Europe/Berlin\"\r\n      },\r\n      link: \"https://www.meetup.com/de-DE/jug-hamburg/events/263370107/\",\r\n      description: \"<p>Wer Microservices in Java entwickeln mÃ¶chte, muss nicht zwangslÃ¤ufig zu Spring Boot greifen. Es lohnt ein Blick auf alternative Frameworks, die in zunehmender Anzahl verfÃ¼gbar sind und bezÃ¼glich ihrer FunktionalitÃ¤t stark aufholen. So schreitet auch die Entwicklung des MicroProfiles weiter voran. In beeindruckender Geschwindigkeit wurden zahlreiche APIs entwickelt, die (nicht nur) fÃ¼r die Entwicklung von Microservices sehr hilfreich sind.<br/>Hierzu zÃ¤hlen die UnterstÃ¼tzung von Metriken, Health Checks, Fault Tolerance und JSON Web Tokens. FÃ¼r den Einsatz im Projekt kann aus unterschiedlichen Implementierungen wie TomEE, Thorntail oder OpenLiberty gewÃ¤hlt werden. In dieser Live-Coding-Session wird der praktische Einsatz von MicroProfile anhand eines Praxisbeispiels demonstriert.<br/> <br/> <br/>Referent:<br/>Thilo Frotscher arbeitet als freiberuflicher Softwarearchitekt und Trainer. Als Experte fÃ¼r Enterprise Java und Systemintegration unterstÃ¼tzt er seine Kunden Ã¼berwiegend durch Entwicklung, Reviews oder die DurchfÃ¼hrung von Schulungen. Thilo ist (Co-)Autor mehrerer BÃ¼cher in den Bereichen Java EE, (Web) Services und Systemintegration, hat zahlreiche Fachartikel verfasst und spricht regelmÃ¤Ãig auf Fachkonferenzen und Schulungsveranstaltungen oder bei Java User Groups.</p> \",\r\n      visibility: \"public\",\r\n      member_pay_fee: false\r\n    }\r\n  ]\r\n};\r\n\r\nexport { mockEvents };","import axios from 'axios';\r\nimport { mockEvents } from './mock-events';\r\n\r\nasync function getSuggestions(query) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return [\r\n      {\r\n        city: 'Munich',\r\n        country: 'de',\r\n        localized_country_name: 'Germany',\r\n        name_string: 'Munich, Germany',\r\n        zip: 'meetup3',\r\n        lat: 48.14,\r\n        lon: 11.58\r\n      },\r\n      {\r\n        city: 'Munich',\r\n        country: 'us',\r\n        localized_country_name: 'USA',\r\n        state: 'ND',\r\n        name_string: 'Munich, North Dakota, USA',\r\n        zip: '58352',\r\n        lat: 48.66,\r\n        lon: -98.85\r\n      }\r\n    ];\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\r\n      + query\r\n      + '&access_token=' + token;\r\n    const result = await axios.get(url);\r\n    return result.data;\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\nasync function getEvents(lat, lon, page) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return mockEvents.events;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\r\n      + '&access_token=' + token;\r\n    // lat, lon is optional; if you have a lat and lon, you can add them\r\n    if (lat && lon) {\r\n      url += '&lat=' + lat + '&lon=' + lon;\r\n    }\r\n    if (page) {\r\n      url += '&page=' + page;\r\n    }\r\n    if (lat && lon && page) {\r\n      url += '&lat=' + lat + '&lon=' + lon + '&page=' + page;\r\n    }\r\n    const result = await axios.get(url);\r\n    const events = result.data.events;\r\n    return events;\r\n  }\r\n\r\n};\r\n\r\nfunction getAccessToken() {\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  if (!accessToken) {\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get('code');\r\n\r\n    if (!code) {\r\n      window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=jr2bsub23bropmv7e9cn3v9mvp&response_type=code&redirect_uri=https://cilvin.github.io/meetup/';\r\n      return null;\r\n    }\r\n\r\n    return getOrRenewAccessToken('get', code);\r\n  }\r\n\r\n  const lastSavedTime = localStorage.getItem('last_saved_time');\r\n\r\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\r\n    return accessToken\r\n  }\r\n\r\n  const refreshToken = localStorage.getItem('refresh_token');\r\n\r\n  return getOrRenewAccessToken('renew', refreshToken);\r\n};\r\n\r\nasync function getOrRenewAccessToken(type, key) {\r\n  let url;\r\n  if (type === 'get') {\r\n    // Lambda endpoint to get token by code\r\n    url = 'https://a1yi0t3eah.execute-api.us-west-2.amazonaws.com/dev/api/token/'\r\n      + key;\r\n  } else if (type === 'renew') {\r\n    // Lambda endpoint to get token by refresh_token\r\n    url = 'https://a1yi0t3eah.execute-api.us-west-2.amazonaws.com/dev/api/refreshtoken'\r\n      + key;\r\n  }\r\n\r\n  // Use Axios to make a GET request to the endpoint\r\n  const tokenInfo = await axios.get(url);\r\n\r\n  // Save tokens to localStorage together with a timestamp\r\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\r\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\r\n  localStorage.setItem('last_saved_time', Date.now());\r\n\r\n  // Return the access_token\r\n  return tokenInfo.data.access_token;\r\n};\r\n\r\nexport { getSuggestions, getEvents, getAccessToken };","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n    constructor(props) {\r\n      super(props);\r\n      this.color = 'red';\r\n    }\r\n  }\r\n\r\nexport { InfoAlert, ErrorAlert };\r\n","import React, { Component } from 'react';\r\nimport { getSuggestions } from './api';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    infoText: ''\r\n  };\r\n\r\n  handleInputChanged = event => {\r\n    const value = event.target.value;\r\n    this.setState({ query: value });\r\n    getSuggestions(value).then(suggestions => {\r\n      this.setState({ suggestions });\r\n\r\n      if (value && suggestions.length === 0) {\r\n        this.setState({\r\n          infoText:\r\n            'We can not find the city you are looking for. Please try another city'\r\n        });\r\n      } else {\r\n        this.setState({\r\n          infoText: '',\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (value, lat, lon) => {\r\n    this.setState({ query: value, suggestions: [] });\r\n    this.props.updateEvents(lat, lon);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <InfoAlert text={this.state.infoText} />\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          placeholder=\"Your City of Choice\"\r\n        />\r\n\r\n        <ul className=\"suggestions\">\r\n          {this.state.suggestions.map(item => (\r\n            <li\r\n              key={item.name_string}\r\n              onClick={() =>\r\n                this.handleItemClicked(item.name_string, item.lat, item.lon)\r\n              }\r\n            >\r\n              {item.name_string}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state = {\r\n    numberOfEvents: 32,\r\n    infoText: ''\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ numberOfEvents: value });\r\n    \r\n\r\n    if (value < 1) {\r\n      this.setState({\r\n        infoText: 'Number must be 1 or greater'\r\n      });\r\n    } else {\r\n      this.setState({\r\n        infoText: '',\r\n      });\r\n      this.props.updateEvents(null, null, value);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"numberOfEvents\">\r\n        <label>Number of Events: </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"numberOfEvents__input\"\r\n          value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ErrorAlert text={this.state.infoText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport './App.css';\n\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\n\nclass App extends Component {\n\n  componentDidMount() {\n    getEvents().then(response => this.setState({ events: response }));\n  }\n\n  state = {\n    events: [],\n    page: null,\n    defaultCity: '',\n    lat: null,\n    lon: null\n  }\n\n  updateEvents = (lat, lon, page) => {\n    if(lat && lon) {\n      getEvents(lat, lon, this.state.page).then(response => this.setState({ events: response, lat, lon }));\n    }\n    else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(response => this.setState({ events: response, page }));\n    }\n    else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(response => this.setState({ events: response }));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEvents={this.updateEvents} numberOfEvents={this.state.events.length} lat={this.state.lat} lon={this.state.lon} />\n        <EventList events={this.state.events} />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\natatus.config('b331bcbee8684f28a326700eba8c3063').install();\n\n"],"sourceRoot":""}